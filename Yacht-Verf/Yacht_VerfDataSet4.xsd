<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Yacht_VerfDataSet4" targetNamespace="http://tempuri.org/Yacht_VerfDataSet4.xsd" xmlns:mstns="http://tempuri.org/Yacht_VerfDataSet4.xsd" xmlns="http://tempuri.org/Yacht_VerfDataSet4.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Yacht_VerfConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Yacht_VerfConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Yacht_Verf.Properties.Settings.GlobalReference.Default.Yacht_VerfConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UnitsTableAdapter" GeneratorDataComponentClassName="UnitsTableAdapter" Name="Units" UserDataComponentName="UnitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Yacht_VerfConnectionString (Settings)" DbObjectName="dbo.Units" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Units] WHERE (([Id_Unit] = @Original_Id_Unit) AND ((@IsNull_Name_Unit = 1 AND [Name_Unit] IS NULL) OR ([Name_Unit] = @Original_Name_Unit)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Unit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Unit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name_Unit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name_Unit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_Unit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Unit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Units] ([Id_Unit], [Name_Unit]) VALUES (@Id_Unit, @Name_Unit);
SELECT Id_Unit, Name_Unit FROM Units WHERE (Id_Unit = @Id_Unit)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Unit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Unit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_Unit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Unit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Unit, Name_Unit FROM dbo.Units</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Units] SET [Id_Unit] = @Id_Unit, [Name_Unit] = @Name_Unit WHERE (([Id_Unit] = @Original_Id_Unit) AND ((@IsNull_Name_Unit = 1 AND [Name_Unit] IS NULL) OR ([Name_Unit] = @Original_Name_Unit)));
SELECT Id_Unit, Name_Unit FROM Units WHERE (Id_Unit = @Id_Unit)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Unit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Unit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_Unit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Unit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Unit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Unit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name_Unit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name_Unit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_Unit" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Unit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Unit" DataSetColumn="Id_Unit" />
              <Mapping SourceColumn="Name_Unit" DataSetColumn="Name_Unit" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Yacht_VerfDataSet4" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Yacht_VerfDataSet4" msprop:Generator_DataSetName="Yacht_VerfDataSet4">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Units" msprop:Generator_RowEvHandlerName="UnitsRowChangeEventHandler" msprop:Generator_RowDeletedName="UnitsRowDeleted" msprop:Generator_RowDeletingName="UnitsRowDeleting" msprop:Generator_RowEvArgName="UnitsRowChangeEvent" msprop:Generator_TablePropName="Units" msprop:Generator_RowChangedName="UnitsRowChanged" msprop:Generator_RowChangingName="UnitsRowChanging" msprop:Generator_TableClassName="UnitsDataTable" msprop:Generator_RowClassName="UnitsRow" msprop:Generator_TableVarName="tableUnits" msprop:Generator_UserTableName="Units">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Unit" msprop:Generator_ColumnPropNameInRow="Id_Unit" msprop:Generator_ColumnPropNameInTable="Id_UnitColumn" msprop:Generator_ColumnVarNameInTable="columnId_Unit" msprop:Generator_UserColumnName="Id_Unit" type="xs:int" />
              <xs:element name="Name_Unit" msprop:Generator_ColumnPropNameInRow="Name_Unit" msprop:Generator_ColumnPropNameInTable="Name_UnitColumn" msprop:Generator_ColumnVarNameInTable="columnName_Unit" msprop:Generator_UserColumnName="Name_Unit" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Units" />
      <xs:field xpath="mstns:Id_Unit" />
    </xs:unique>
  </xs:element>
</xs:schema>